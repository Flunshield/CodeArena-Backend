# Utiliser une version alpine légère de Node.js pour la production
FROM node:18-alpine AS build

# Définir le répertoire de travail dans le container
WORKDIR /usr/src/app

# Copier package.json et package-lock.json dans le container
COPY package*.json ./

# Installer uniquement les dépendances de production
RUN npm ci --only=production

# Copier les autres fichiers de l'application
COPY . .

# Générer le code Prisma
RUN npx prisma generate

# Construire l'application (s'il y a une étape de build, par exemple pour transpiler TypeScript)
RUN npm run build

# Étape de production
FROM node:18-alpine

# Définir le répertoire de travail dans le container
WORKDIR /usr/src/app

# Copier uniquement les fichiers nécessaires à l'application depuis l'étape de build
COPY --from=build /usr/src/app ./

# Installer les dépendances WebSocket pour NestJS
RUN npm install @nestjs/websockets --only=production

# Définir la variable d'environnement NODE_ENV à production
ENV NODE_ENV=production

# Exposer le port que l'application utilise
EXPOSE 3000

# Commande pour démarrer l'application
CMD ["npm", "run", "start:prod"]
